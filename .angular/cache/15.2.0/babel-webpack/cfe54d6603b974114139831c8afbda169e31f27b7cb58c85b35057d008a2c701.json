{"ast":null,"code":"import { of } from 'rxjs';\nimport { CONTENTS } from './contentDb';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.services\";\nexport class IndianCricketService {\n  constructor(messageService) {\n    this.messageService = messageService;\n  }\n  fetchContent() {\n    const content = of(CONTENTS);\n    this.messageService.add('Content array loaded!');\n    return content;\n  }\n  fetchContentById(id) {\n    const content = CONTENTS.find(c => c.id === id);\n    if (content) {\n      this.messageService.add(`Content Item at Id: ${id}`);\n      return of(content);\n    } else {\n      this.messageService.add('Unable to retrieve content with id ' + id);\n    }\n    throw new Error(`Content with id ${id} not found`);\n  }\n}\nIndianCricketService.ɵfac = function IndianCricketService_Factory(t) {\n  return new (t || IndianCricketService)(i0.ɵɵinject(i1.MessageService));\n};\nIndianCricketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: IndianCricketService,\n  factory: IndianCricketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,EAAE,QAAQ,MAAM;AAErC,SAASC,QAAQ,QAAQ,aAAa;;;AAMtC,OAAM,MAAOC,oBAAoB;EAE/BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;EAAmB;EAErDC,YAAY;IACV,MAAMC,OAAO,GAAIN,EAAE,CAACC,QAAQ,CAAC;IAC7B,IAAI,CAACG,cAAc,CAACG,GAAG,CAAC,uBAAuB,CAAC;IAChD,OAAOD,OAAO;EAChB;EAEAE,gBAAgB,CAACC,EAAU;IACzB,MAAMH,OAAO,GAAGL,QAAQ,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC/C,IAAIH,OAAO,EAAE;MACX,IAAI,CAACF,cAAc,CAACG,GAAG,CAAC,uBAAuBE,EAAE,EAAE,CAAC;MACpD,OAAOT,EAAE,CAACM,OAAO,CAAC;KACnB,MAAI;MACH,IAAI,CAACF,cAAc,CAACG,GAAG,CAAC,qCAAqC,GAAGE,EAAE,CAAC;;IAErE,MAAM,IAAIG,KAAK,CAAC,mBAAmBH,EAAE,YAAY,CAAC;EACpD;;AAnBWP,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;SAApBA,oBAAoB;EAAAW,SAApBX,oBAAoB;EAAAY,YAFnB;AAAM","names":["of","CONTENTS","IndianCricketService","constructor","messageService","fetchContent","content","add","fetchContentById","id","find","c","Error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\excel\\Downloads\\Pre_Parikh_IndianCricketTeam\\vir_patel_CricketTeam\\src\\app\\helper-files\\cricketteam.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Content } from './content-interface';\r\nimport { CONTENTS } from './contentDb';\r\nimport { MessageService } from './message.services';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IndianCricketService {\r\n\r\n  constructor(private messageService: MessageService){ }\r\n\r\n  fetchContent(): Observable<Content[]> {\r\n    const content =  of(CONTENTS);\r\n    this.messageService.add('Content array loaded!');\r\n    return content;\r\n  }\r\n\r\n  fetchContentById(id: number): Observable<Content> {\r\n    const content = CONTENTS.find(c => c.id === id);\r\n    if (content) {\r\n      this.messageService.add(`Content Item at Id: ${id}`)\r\n      return of(content);\r\n    }else{\r\n      this.messageService.add('Unable to retrieve content with id ' + id);\r\n    }\r\n    throw new Error(`Content with id ${id} not found`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}